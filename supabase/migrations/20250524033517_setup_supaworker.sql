CREATE SCHEMA IF NOT EXISTS "supaworker";

CREATE TABLE IF NOT EXISTS "supaworker"."jobs" (
  "id" bigint NOT NULL,
  "created_at" TIMESTAMP WITH TIME ZONE DEFAULT "now" () NOT NULL,
  "claimed_at" TIMESTAMP WITH TIME ZONE,
  "queue" "text" NOT NULL,
  "attempts" smallint DEFAULT '0'::smallint NOT NULL,
  "status" character varying NOT NULL,
  "payload" "jsonb"
);

ALTER TABLE "supaworker"."jobs" OWNER TO "postgres";

ALTER TABLE "supaworker"."jobs"
ALTER COLUMN "id"
ADD GENERATED BY DEFAULT AS IDENTITY (
  SEQUENCE NAME "supaworker"."jobs_id_seq" START
  WITH
    1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
);

ALTER TABLE ONLY "supaworker"."jobs"
ADD CONSTRAINT "jobs_pkey" PRIMARY KEY ("id");

CREATE TABLE IF NOT EXISTS "supaworker"."logs" (
  "id" bigint NOT NULL,
  "job_id" bigint NOT NULL,
  "created_at" TIMESTAMP WITH TIME ZONE DEFAULT "now" () NOT NULL,
  "status" character varying NOT NULL,
  "error" "jsonb"
);

ALTER TABLE "supaworker"."logs" OWNER TO "postgres";

ALTER TABLE ONLY "supaworker"."logs"
ADD CONSTRAINT "logs_pkey" PRIMARY KEY ("id");

ALTER TABLE "supaworker"."logs"
ALTER COLUMN "id"
ADD GENERATED BY DEFAULT AS IDENTITY (
  SEQUENCE NAME "supaworker"."logs_id_seq" START
  WITH
    1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1
);

ALTER TABLE "supaworker"."logs"
ADD CONSTRAINT "logs_job_id_fkey" FOREIGN KEY (job_id) REFERENCES supaworker.jobs (id) ON UPDATE CASCADE ON DELETE CASCADE NOT valid;

ALTER TABLE "supaworker"."logs" validate CONSTRAINT "logs_job_id_fkey";

CREATE OR REPLACE FUNCTION "supaworker"."dequeue" ("queue_name" character varying) RETURNS SETOF "supaworker"."jobs" LANGUAGE "plpgsql"
-- Explicitly set search path to empty string for consistent behavior (security)
-- https://supabase.com/docs/guides/database/database-advisors?queryGroups=lint&lint=0011_function_search_path_mutable
SET
  search_path = '' AS $$ #variable_conflict use_variable
BEGIN
  RETURN QUERY
  WITH selected_job AS (
    SELECT id
    FROM "supaworker"."jobs"
    WHERE queue = queue_name
      AND claimed_at IS NULL
    ORDER BY created_at ASC
    FOR UPDATE SKIP LOCKED
    LIMIT 1
  )
  UPDATE "supaworker"."jobs"
  SET claimed_at = now()
  WHERE id IN (SELECT id FROM selected_job)
  RETURNING *;
END;
$$;

ALTER FUNCTION "supaworker"."dequeue" ("queue_name" character varying) OWNER TO "postgres";

ALTER TABLE "supaworker"."jobs" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "supaworker"."logs" ENABLE ROW LEVEL SECURITY;

-- https://github.com/orgs/supabase/discussions/13680
ALTER PUBLICATION supabase_realtime
ADD TABLE supaworker.jobs;

-- Expose custom schema to service_role
-- https://supabase.com/docs/guides/api/using-custom-schemas
-- See config.toml for self-hosted Supabase
GRANT USAGE ON SCHEMA "supaworker" TO service_role;

GRANT ALL ON ALL TABLES IN SCHEMA "supaworker" TO service_role;

GRANT ALL ON ALL ROUTINES IN SCHEMA "supaworker" TO service_role;

GRANT ALL ON ALL SEQUENCES IN SCHEMA "supaworker" TO service_role;

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA "supaworker"
GRANT ALL ON TABLES TO service_role;

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA "supaworker"
GRANT ALL ON ROUTINES TO service_role;

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA "supaworker"
GRANT ALL ON SEQUENCES TO service_role;
